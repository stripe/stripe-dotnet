// File generated from our OpenAPI spec
namespace Stripe
{
    using System;
    using System.Collections.Generic;
    using System.Net;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;

    public class QuotePreviewSubscriptionScheduleService : ServiceNested<QuotePreviewSubscriptionSchedule>,
        INestedListable<QuotePreviewSubscriptionSchedule, QuotePreviewSubscriptionScheduleListOptions>
    {
        public QuotePreviewSubscriptionScheduleService()
        {
        }

        internal QuotePreviewSubscriptionScheduleService(
            ApiRequestor requestor)
            : base(requestor)
        {
        }

        public QuotePreviewSubscriptionScheduleService(IStripeClient client)
            : base(client)
        {
        }

        /// <summary>
        /// <p>Preview the schedules that would be generated by accepting the quote</p>.
        /// </summary>
        public virtual StripeList<QuotePreviewSubscriptionSchedule> List(string parentId, QuotePreviewSubscriptionScheduleListOptions options = null, RequestOptions requestOptions = null)
        {
            return this.Request<StripeList<QuotePreviewSubscriptionSchedule>>(BaseAddress.Api, HttpMethod.Get, $"/v1/quotes/{WebUtility.UrlEncode(parentId)}/preview_subscription_schedules", options, requestOptions);
        }

        /// <summary>
        /// <p>Preview the schedules that would be generated by accepting the quote</p>.
        /// </summary>
        public virtual Task<StripeList<QuotePreviewSubscriptionSchedule>> ListAsync(string parentId, QuotePreviewSubscriptionScheduleListOptions options = null, RequestOptions requestOptions = null, CancellationToken cancellationToken = default)
        {
            return this.RequestAsync<StripeList<QuotePreviewSubscriptionSchedule>>(BaseAddress.Api, HttpMethod.Get, $"/v1/quotes/{WebUtility.UrlEncode(parentId)}/preview_subscription_schedules", options, requestOptions, cancellationToken);
        }

        /// <summary>
        /// <p>Preview the schedules that would be generated by accepting the quote</p>.
        /// </summary>
        public virtual IEnumerable<QuotePreviewSubscriptionSchedule> ListAutoPaging(string parentId, QuotePreviewSubscriptionScheduleListOptions options = null, RequestOptions requestOptions = null)
        {
            return this.ListRequestAutoPaging<QuotePreviewSubscriptionSchedule>($"/v1/quotes/{WebUtility.UrlEncode(parentId)}/preview_subscription_schedules", options, requestOptions);
        }

        /// <summary>
        /// <p>Preview the schedules that would be generated by accepting the quote</p>.
        /// </summary>
        public virtual IAsyncEnumerable<QuotePreviewSubscriptionSchedule> ListAutoPagingAsync(string parentId, QuotePreviewSubscriptionScheduleListOptions options = null, RequestOptions requestOptions = null, CancellationToken cancellationToken = default)
        {
            return this.ListRequestAutoPagingAsync<QuotePreviewSubscriptionSchedule>($"/v1/quotes/{WebUtility.UrlEncode(parentId)}/preview_subscription_schedules", options, requestOptions, cancellationToken);
        }
    }
}
