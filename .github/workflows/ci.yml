name: CI

on:
  workflow_dispatch: {}
  push:
    branches:
      - master
      - beta
      - sdk-release/**
      - feature/**
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:
    branches:
      - master
      - beta
      - sdk-release/**
      - feature/**

jobs:
  build:
    name: Build and test

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: |
            2.1.x
            3.1.x
            5.0.x
            6.0.x

      - name: Install tools
        run: |
          dotnet tool restore

      - name: Build Release
        run: dotnet build src -c Release /p:ContinuousIntegrationBuild=true

      - name: Build Debug
        run: dotnet build src -c Debug

      - name: Start stripe-mock
        run: docker run -d -p 12111-12112:12111-12112 stripe/stripe-mock && sleep 5

      # TODO: UNCOMMENT ME
      # - name: Run test suite
      #   run: dotnet test --no-build src/StripeTests/StripeTests.csproj -c Release

      # - name: Run test suite (Debug)
      #   run: dotnet test --no-build src/StripeTests/StripeTests.csproj -c Debug

      - name: Collect coverage
        run: dotnet test --no-build -c Debug -f netcoreapp3.1 src/StripeTests/StripeTests.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:ExcludeByAttribute=CompilerGenerated

      - name: Send code coverage report to coveralls.io
        run: |
          dotnet tool run csmacnz.Coveralls \
            --opencover \
            -i src/StripeTests/coverage.netcoreapp3.1.opencover.xml \
            --repoToken $COVERALLS_REPO_TOKEN \
            --useRelativePaths \
            --commitId $commitId \
            --commitBranch $commitBranch \
            --jobId $jobId \
            --serviceName $CI_NAME

        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          commitId: ${{ github.sha }}
          commitBranch: ${{ github.event.pull_request.head.ref }}
          commitAuthor: ${{ github.event.pull_request.user.login }}
          jobId: ${{ github.run_id }}
          CI_NAME: "Github Actions"

      - name: Pack
        run: dotnet pack src -c Release --no-build --output nuget
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: nuget
          path: nuget/

  publish:
    name: Publish
    if: (((github.event_name == 'push') || (github.event_name == 'workflow_dispatch')) && startsWith(github.ref, 'refs/tags/v') && endsWith(github.actor, '-stripe'))
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v2
      with:
        name: nuget
        path: nuget
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Publish NuGet packages to NuGet
      run: dotnet nuget push nuget/*.nupkg --api-key ${{ secrets.NUGET_KEY }} --source "nuget.org"
